<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>mod-data-export-spring</artifactId>

  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/>
    <version>2.3.4.RELEASE</version> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <bursar-export.yaml.file>
      ${project.basedir}/src/main/resources/swagger.api/bursar-export.yaml
    </bursar-export.yaml.file>
    <commons-io.version>2.8.0</commons-io.version>
    <data-export-spring.yaml.file>
      ${project.basedir}/src/main/resources/swagger.api/data-export-spring.yaml
    </data-export-spring.yaml.file>
    <folio-spring-base.version>1.0.2-SNAPSHOT</folio-spring-base.version>
    <java.version>11</java.version>

    <junit-extensions.version>2.4.0</junit-extensions.version>
    <mockito.version>3.7.7</mockito.version>
    <json.version>20200518</json.version>
    <openapi-generator.version>4.3.1</openapi-generator.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Test properties-->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <sonar.exclusions>
    </sonar.exclusions>
  </properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
        </configuration>
        <groupId>org.springframework.boot</groupId>
      </plugin>

      <plugin>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
        <groupId>org.codehaus.mojo</groupId>
      </plugin>

      <plugin>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
        <groupId>org.codehaus.mojo</groupId>
        <version>3.2.0</version>
      </plugin>

      <plugin>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <apiPackage>${project.groupId}.des.rest.resource</apiPackage>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <java8>true</java8>
              </configOptions>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateApiTests>true</generateApiTests>
              <generateApis>true</generateApis>
              <generateModelDocumentation>true</generateModelDocumentation>
              <generateModelTests>false</generateModelTests>
              <generateModels>true</generateModels>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>spring</generatorName>
              <importMappings>
                <importMapping>error=org.folio.tenant.domain.dto.Error</importMapping>
              </importMappings>
              <inputSpec>${data-export-spring.yaml.file}</inputSpec>
              <modelPackage>${project.groupId}.des.domain.dto</modelPackage>
              <modelsToGenerate>job,jobCollection</modelsToGenerate>
              <output>${project.build.directory}/generated-sources</output>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
            </configuration>
            <goals>
              <goal>generate</goal>
            </goals>
            <id>data-export-spring</id>
          </execution>
          <execution>
            <configuration>
              <apiPackage>${project.groupId}.des.rest.resource</apiPackage>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <java8>true</java8>
              </configOptions>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateApiTests>true</generateApiTests>
              <generateApis>true</generateApis>
              <generateModelDocumentation>true</generateModelDocumentation>
              <generateModelTests>false</generateModelTests>
              <generateModels>true</generateModels>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generatorName>spring</generatorName>
              <inputSpec>${bursar-export.yaml.file}</inputSpec>
              <modelPackage>${project.groupId}.des.domain.dto</modelPackage>
              <modelsToGenerate>
                bursarExportConfig,bursarExportConfigCollection
              </modelsToGenerate>
              <output>${project.build.directory}/generated-sources</output>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
            </configuration>
            <goals>
              <goal>generate</goal>
            </goals>
            <id>bursar-export</id>
          </execution>
        </executions>
        <groupId>org.openapitools</groupId>
        <version>${openapi-generator.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/descriptors</directory>
                  <filtering>true</filtering>
                  <include>*Descriptor*-template.json</include>
                </resource>
              </resources>
            </configuration>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <fileSets>
                <fileSet>
                  <destinationFile>${project.build.directory}/ModuleDescriptor.json
                  </destinationFile>
                  <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                </fileSet>
                <fileSet>
                  <destinationFile>${project.build.directory}/DeploymentDescriptor.json
                  </destinationFile>
                  <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json
                  </sourceFile>
                </fileSet>
              </fileSets>
            </configuration>
            <goals>
              <goal>rename</goal>
            </goals>
            <id>rename-descriptor-outputs</id>
            <phase>generate-resources</phase>
          </execution>
        </executions>
        <groupId>com.coderplus.maven.plugins</groupId>
        <version>1.0.1</version>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0-M5</version>
      </plugin>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <localCheckout>true</localCheckout>
          <preparationGoals>clean verify</preparationGoals>
          <pushChanges>false</pushChanges>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0-M1</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <artifactId>folio-spring-base</artifactId>
      <groupId>org.folio</groupId>
      <version>${folio-spring-base.version}</version>
    </dependency>

    <dependency>
      <artifactId>spring-batch-core</artifactId>
      <groupId>org.springframework.batch</groupId>
    </dependency>

    <dependency>
      <artifactId>spring-kafka</artifactId>
      <groupId>org.springframework.kafka</groupId>
    </dependency>

    <dependency>
      <artifactId>modelmapper</artifactId>
      <groupId>org.modelmapper</groupId>
      <version>2.3.9</version>
    </dependency>

    <dependency>
      <artifactId>json</artifactId>
      <groupId>org.json</groupId>
      <version>${json.version}</version>
    </dependency>

    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.postgresql</groupId>
    </dependency>

    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>junit-vintage-engine</artifactId>
          <groupId>org.junit.vintage</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-boot-starter-logging</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>mockito-inline</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>${mockito.version}</version>
    </dependency>
    <dependency>
      <artifactId>junit-extensions</artifactId>
      <groupId>io.github.glytching</groupId>
      <scope>test</scope>
      <version>${junit-extensions.version}</version>
    </dependency>
  </dependencies>
  <description>Data Export Spring module</description>
  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <layout>default</layout>
      <name>FOLIO Release Repository</name>
      <uniqueVersion>false</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <layout>default</layout>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <groupId>org.folio</groupId>
  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>



  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven Repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:git://github.com/folio-org/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/${project.artifactId}.git
    </developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/folio-org/${project.artifactId}</url>
  </scm>

  <version>1.0.1-SNAPSHOT</version>

</project>
